{"version":3,"sources":["../../middleware/validateInput.js"],"names":["req","res","next","body","email","password","status","json","message"],"mappings":";;;;;;AAAA;;;;kBAIe,UAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC;;;AADiC,kBAILF,IAAIG,IAJC;AAAA,MAIzBC,KAJyB,aAIzBA,KAJyB;AAAA,MAIlBC,QAJkB,aAIlBA,QAJkB;;AAMjC;;;;AAGA,MAAI,CAACD,KAAD,IAAU,CAACC,QAAf,EAAyB;AACvBJ,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AACD;;AAED;;;AAJA,OAOK,IAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6B,OAAOC,QAAP,KAAoB,QAArD,EAA+D;AAClEJ,UAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB;AACD,KAFI,MAIA;AACHN;AACD;AACF,C","file":"validateInput.js","sourcesContent":["/**\r\n * @fileoverview validateInput is a middleware that validates the email and password fields in the request object.\r\n * @exports validateInput\r\n */\r\nexport default (req, res, next) => {\r\n  /**\r\n   * @description Destructures and extracts email and password from Request object\r\n   */\r\n  const { email, password } = req.body;\r\n\r\n  /**\r\n   * @description Tests for data input\r\n   */\r\n  if (!email || !password) {\r\n    res.status(401).json({ message: 'Invalid Inputs' });\r\n  }\r\n\r\n  /**\r\n   * @description Tests for data validity\r\n   */\r\n  else if (typeof email !== 'string' || typeof password !== 'string') {\r\n    res.status(401).json({ message: 'Invalid Inputs' });\r\n  }\r\n\r\n  else {\r\n    next();\r\n  }\r\n};"]}